swagger: "2.0"
info:
  title: Transactions API
  version: 1.0.0
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /transactions/:
    get:
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for receiving all transactions
      parameters:
        - in: header
          name: Authorization
          description: '"Bearer [JWT]'
          required: true

        - in: query
          name: userAccountId
          description: user id
          required: true
          schema:
            $ref: "#/definitions/Transactions"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TransactionsResponse"

        "400":
          description: Bad request
        "401":
          description: Unauthenticated
        "403":
          description: Unauthorized
        "404":
          description: Not found

        "500":
          description: Internal Server Error

  /transaction{Id}/:
    get:
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for receiving a transaction
      parameters:
        - in: header
          type: string
          name: Authorization
          description: '"Bearer [JWT]'
          required: true

        - in: query
          name: userAccountId
          description: user id
          required: true
          schema:
            $ref: "#/definitions/TransactionsId"
        - in: query
          name: transactionId
          description: transaction id
          required: true
          schema:
            $ref: "#/definitions/TransactionsId"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TransactionIdResponse"

        "400":
          description: Bad request
        "401":
          description: Unauthenticated
        "403":
          description: Unauthorized
        "404":
          description: Not found

        "500":
          description: Internal Server Error

    put:
      tags:
        - Transaction Module
      summary: Transaction API
      description: API for updating a transaction
      parameters:
        - in: header
          type: string
          name: Authorization
          description: '"Bearer [JWT]'
          required: true

        - in: body
          name: Body of the request
          description: Changes the notes and/or the category of the transaction
          required: true
          schema:
            $ref: "#/definitions/TransactionsPut"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/TransactionsOtherResponse"

        "400":
          description: Bad request
        "401":
          description: Unauthenticated
        "403":
          description: Unauthorized
        "404":
          description: Not found

        "500":
          description: Internal Server Error

definitions:
  # All transactions request payload
  Transactions:
    properties:
      userAccountId:
        type: string
        description: ID of the account

  # Transaction details by id
  TransactionId:
    properties:
      userAccountId:
        type: string
        description: ID of the account
      transactionId:
        type: string
        description: ID of the account

    # retrieve transactions Api without Notes & Category
  TransactionIdResponse:
    type: object
    properties:
      transactionId:
        type: string
        description: ID of a transaction
      date:
        type: string
        description: Date of the transaction
      description:
        type: string
        description: Description of the transaction
      amount:
        type: string
        description: Amount spent in the transaction
      balance:
        type: string
        description: Account's balance after the transaction
      category:
        type: string
        description: Category of the transaction
      notes:
        type: string
        description: User notes of the transaction

  # Message succes delete transacation by transactionid && userAccountId
  TransactionsMessageSuccess:
    properties:
      message:
        type: string
        description: Message of success

  TransactionsResponse:
    type: array
    items:
      type: object
      properties:
        transactionId:
          type: string
          description: ID of a transaction
        date:
          type: string
          description: Date of the transaction
        description:
          type: string
          description: Description of the transaction
        amount:
          type: string
          description: Amount spent in the transaction
        balance:
          type: string
          description: Account's balance after the transaction

  # Transaction Modify
  TransactionsPut:
    properties:
      notes:
        type: string
        description: Notes of the transaction
      category:
        type: string
        description: Category of the transaction

  # Response success Crud transaction Notes & category
  TransactionsOtherResponse:
    properties:
      message:
        type: string
        description: Message of success
